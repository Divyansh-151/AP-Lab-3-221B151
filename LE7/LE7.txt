Docker

Docker is a tool that helps developers create, share, and run applications in a lightweight, portable way. It uses containers, which are like small packages that hold everything an app needs to work—like code, libraries, and settings. This makes sure the app runs the same anywhere, whether on a developer’s laptop or a server. Docker makes software development faster, easier, and more consistent, especially when working with different environments or teams.

Demo:-
>>docker pull hello_world

>>docker run hello_world

Here, Image means Class and Containers stands for Object as relate to Object Oriented Programming.

Docker doemon :- A Process that always runs at background.

Using Ubuntu:-

>>docker pull ubuntu
>>docker run -it ubuntu
>>exit // to exit the system

Docker Network:-
Let 2 containers talk without the need of IP address.

>>docker network ls
>>docker network create mongo_network
>>docker run -d -p 27017:27017 --name mongo --network mongo -network -e MONGO_INITDB_ROOT_USERNAME = admin -e MONGO_INITDB_ROOT_PASSWORD = admin mongo

>> docker ps //image running
>>docker ps -a//image stored

* -p flag :- Port binding.

//running mongo_express container on isolated network mongo_network.

>>docker run -d -p 8081:8081 --name mongo-express --network mongo_network -e ME_CONFIG_MONGODB_ADMINPASSWORD=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=admin -e ME_CONFIG_MONGODB_URL= "mongodb://admin:admin@mongo:27017" mongo-express